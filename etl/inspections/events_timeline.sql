-- #################
-- The raw database contains dates of different events that can happen to a home while it goes through the inspection
-- process. These dates are scattered about many tables and many business processes. This SQL scripts collects all
-- interesting dates and puts them into one view. For each type of event, the view contains one row for each occurrence
-- of this event.

-- Example of the created view
--  number_key    comp_type   date                    event
--  ------------  ---------   -------------------     -------------------
--  666666666666  CBHCODE     2005-01-03 00:00:00     Initial inspection
--  666666666666  CBHCODE     2005-01-03 00:00:00     Reported
--  666666666666  CBHCODE     2005-01-04 00:00:00     Orders issued
--  666666666666  CBHCODE     2005-02-09 00:00:00     Final notice
--  666666666666  CBHCODE     2005-04-13 00:00:00     Civil 1


-- ****************IMPORTANT:****************
-- The large list of union-statements is auto-generated by the make_union.py script in this folder.
-- ****************IMPORTANT:****************

-- #################

DROP VIEW inspections_views.events;

CREATE VIEW inspections_views.events
AS (
SELECT number_key, comp_type, date_a AS date, 'Reported' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHCODE' AND date_a IS NOT NULL
UNION
SELECT number_key, comp_type, date_b AS date, 'Initial inspection' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHCODE' AND date_b IS NOT NULL
UNION
SELECT number_key, comp_type, date_c AS date, 'Orders issued' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHCODE' AND date_c IS NOT NULL
UNION
SELECT number_key, comp_type, date_174 AS date, 'Final notice' AS event
FROM inspections_raw.t_dssg_APD_NUM1
WHERE comp_type = 'CBHCODE' AND date_174 IS NOT NULL
UNION
SELECT number_key, comp_type, date_i AS date, 'Pre-prosecution status' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHCODE' AND date_i IS NOT NULL
UNION
SELECT number_key, comp_type, date_h AS date, 'Civil 1' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHCODE' AND date_h IS NOT NULL
UNION
SELECT number_key, comp_type, date_072 AS date, 'Civil 2' AS event
FROM inspections_raw.t_dssg_APD_NUM0
WHERE comp_type = 'CBHCODE' AND date_072 IS NOT NULL
UNION
SELECT number_key, comp_type, date_026 AS date, 'Prosecutor approves' AS event
FROM inspections_raw.t_dssg_APD_NUM0
WHERE comp_type = 'CBHCODE' AND date_026 IS NOT NULL
UNION
SELECT number_key, comp_type, date_a AS date, 'Case created' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHBARRI' AND date_a IS NOT NULL
UNION
SELECT number_key, comp_type, date_e AS date, 'Specification prepared' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHBARRI' AND date_e IS NOT NULL
UNION
SELECT number_key, comp_type, date_i AS date, 'Barricade completed' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHBARRI' AND date_i IS NOT NULL
UNION
SELECT number_key, comp_type, date_j AS date, 'Billed' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHBARRI' AND date_j IS NOT NULL
UNION
SELECT number_key, comp_type, date_m AS date, 'Case closed' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHBARRI' AND date_m IS NOT NULL
UNION
SELECT number_key, comp_type, date_b AS date, 'Initial inspection' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'LTTR-PR' AND date_b IS NOT NULL
UNION
SELECT number_key, comp_type, date_d AS date, 'Citation litter' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'LTTR-PR' AND date_d IS NOT NULL
UNION
SELECT number_key, comp_type, date_h AS date, 'Civil 1' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'LTTR-PR' AND date_h IS NOT NULL
UNION
SELECT number_key, comp_type, date_j AS date, 'Civil 2' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'LTTR-PR' AND date_j IS NOT NULL
UNION
SELECT number_key, comp_type, date_n AS date, 'Closed or transferred' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'LTTR-PR' AND date_n IS NOT NULL
UNION
SELECT number_key, comp_type, date_a AS date, 'Intake' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHHAZ_R' AND date_a IS NOT NULL
UNION
SELECT number_key, comp_type, date_221 AS date, 'Nuisance hearing' AS event
FROM inspections_raw.t_dssg_APD_NUM2
WHERE comp_type = 'CBHHAZ_R' AND date_221 IS NOT NULL
UNION
SELECT number_key, comp_type, date_d AS date, 'Demolition' AS event
FROM inspections_raw.t_dssg_apd_base
WHERE comp_type = 'CBHHAZ_R' AND date_d IS NOT NULL
);

-- #################
-- There are some cases that have several parcel id's attached to them. For some analysis it is useful to have
-- one-to-one mapping between case and parcel. This query creates a view for such a mapping. Cases that have
-- more than one parcel attached to it not contained in the view.
-- #################

CREATE VIEW inspections_views.number_key2parcel_no
AS
   (SELECT par.number_key, trim(par.parcel_no)
    FROM inspections_raw.t_dssg_apd_par AS par
    JOIN
      (SELECT number_key, count(distinct(parcel_no))
       FROM inspections_raw.t_dssg_apd_par
       WHERE primary_parcel = '1'
       GROUP BY number_key) AS counts
    ON counts.number_key = par.number_key
    WHERE counts.count = 1
    AND primary_parcel='1');

-- map number key to parcel id
CREATE VIEW inspections_views.events_parcel_id AS
 SELECT parcel.parcel_no,
    events.number_key,
    events.comp_type,
    events.date,
    events.event
   FROM inspections_views.events events
   JOIN inspections_views.number_key2parcel_no parcel ON events.number_key = parcel.number_key;

--add parcel id to timeline
CREATE VIEW inspections_views.events_parcel_id as
(SELECT parcel.parcel_no, events.number_key, events.comp_type, events.date, events.event
FROM inspections_views.events AS events
JOIN inspections_views.number_key2parcel_no AS parcel
ON events.number_key = parcel.number_key);

